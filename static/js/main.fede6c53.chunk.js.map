{"version":3,"sources":["components/MovieCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Score/Score.js","components/WeatherDidget/index.js","App.js","index.js"],"names":["MovieCard","props","className","onClick","handler","id","alt","name","src","image","quote","year","Wrapper","children","Title","Score","total","status","App","state","navigator","geolocation","getCurrentPosition","pos","moment","format","Component","movies","clickedMoviesIds","score","goal","shuffleScoreCard","includes","setState","push","length","console","log","i","j","Math","floor","random","handleClick","this","map","movie","key","href","target","rel","ReactDOM","render","document","getElementById"],"mappings":"q3EA2BeA,MAxBf,SAAmBC,GACjB,OACE,yBAAKC,UAAU,2BAA2BC,QAAS,kBAAMF,EAAMG,QAAQH,EAAMI,MAC3E,yBAAKH,UAAU,iBACb,yBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,SAEnC,yBAAKP,UAAU,WACb,4BACE,4BACE,yCADF,IAC0BD,EAAMM,MAEhC,4BACE,0CADF,IAC2BN,EAAMS,OAEjC,4BACE,yCADF,IAC0BT,EAAMU,U,MCX3BC,MAJf,SAAiBX,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMY,W,MCG1BC,MAJf,SAAeb,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMY,W,OCOvBE,G,MAPD,SAAAd,GAAK,OACjB,yBAAKC,UAAU,aACb,wBAAIA,UAAU,SAAd,cAAkCD,EAAMe,OACxC,wBAAId,UAAU,UAAUD,EAAMgB,W,gBCoBlBC,E,2MAtBdC,MAAQ,G,mFAKNC,UAAUC,YAAYC,oBAAmB,SAAAC,GAAG,OAAWA,O,+BAWrD,OAEE,sCAAYC,MAASC,OAAO,c,GApBlBC,aCkFHR,E,2MA3EbC,MAAQ,CACNQ,SACAC,iBAAkB,GAClBC,MAAO,EACPC,KAAM,EACNb,OAAQ,I,EAIVc,iBAAmB,SAAA1B,GACjB,IAAIuB,EAAmB,EAAKT,MAAMS,iBAElC,GAAGA,EAAiBI,SAAS3B,GAC3B,EAAK4B,SAAS,CAAEL,iBAAkB,GAAIC,MAAO,EAAGZ,OAAS,kDAD3D,CAME,GAFAW,EAAiBM,KAAK7B,GAES,IAA5BuB,EAAiBO,OAGlB,OAFA,EAAKF,SAAS,CAACJ,MAAO,EAAGZ,OAAQ,oDAAqDW,iBAAkB,UACxGQ,QAAQC,IAAI,WAId,EAAKJ,SAAS,CAAEN,SAAQC,mBAAkBC,MAAOD,EAAiBO,OAAQlB,OAAQ,MAElF,IAAK,IAAIqB,EAAIX,EAAOQ,OAAS,EAAGG,EAAI,EAAGA,IAAK,CAC1C,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADE,EAEjB,CAACX,EAAOY,GAAIZ,EAAOW,IAA3CX,EAAOW,GAFkC,KAE9BX,EAAOY,GAFuB,Q,EAOhDI,YAAa,SAAAtC,K,wEAKH,IAAD,OACP,OACE,yBAAKH,UAAU,OACb,4BAAQA,UAAU,cAChB,wBAAIA,UAAU,aAAd,eACA,uBAAGA,UAAU,aAAb,0CAGA,kBAAC,EAAD,OAEF,kBAAC,EAAD,CAAOc,MAAO4B,KAAKzB,MAAMU,MAClBC,KAAM,EACNb,OAAQ2B,KAAKzB,MAAMF,SAG1B,kBAAC,EAAD,KACF,kBAAC,EAAD,oBACC2B,KAAKzB,MAAMQ,OAAOkB,KAAI,SAAAC,GAAK,OAC1B,kBAAC,EAAD,CACE1C,QAAS,EAAK2B,iBACd1B,GAAIyC,EAAMzC,GACV0C,IAAKD,EAAMzC,GACXE,KAAMuC,EAAMvC,KACZE,MAAOqC,EAAMrC,MACbC,MAAOoC,EAAMpC,MACbC,KAAMmC,EAAMnC,WAId,gCACE,2BAAG,uBAAGqC,KAAK,GAAGC,OAAO,SAASC,IAAI,uBAA/B,SAAH,W,GAtEQxB,a,MCHlByB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.fede6c53.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction MovieCard(props) {\n  return (\n    <div className=\"card img-container hover\" onClick={() => props.handler(props.id)}>\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Quote:</strong> {props.quote}\n          </li>\n          <li>\n            <strong>Year:</strong> {props.year}\n          </li>\n        </ul>\n      </div>\n     \n    </div>\n  );\n}\n\nexport default MovieCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./Score.css\";\n\n//stateless component\nconst Score = props => (\n  <div className=\"gameScore\">\n    <h3 className=\"score\">Your Score {props.total}</h3>\n    <h3 className=\"status\">{props.status}</h3>\n  </div>\n);\n\nexport default Score;","import React, { Component } from \"react\";\nimport moment from \"moment\"\n\nclass App extends Component {\n  // Setting this.state.movies to the cards json array\n  state = {\n    \n  };\n  componentDidMount(){\n      let position;\n    navigator.geolocation.getCurrentPosition(pos=>position=pos)\n       //use axios or fetch to hit a weather api for the location \n  }\n\n  //weather\n    //get loication\n        //navigator.geolocation.getCurrentPosition()\n    //hit up an api\n\n    //display som stuff\n  render(){\n      return (\n          \n        <h1>Hi its {moment().format(\"hh:mm\")}</h1>\n      )\n  }\n}\n export default App;","import React, { Component } from \"react\";\nimport MovieCard from \"./components/MovieCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport movies from \"./movies.json\";\nimport Score from \"./components/Score\";\nimport Widget from \"./components/WeatherDidget\";\n\nclass App extends Component {\n  // Setting this.state.movies to the cards json array\n  state = {\n    movies,\n    clickedMoviesIds: [],\n    score: 0,\n    goal: 8,\n    status: \"\"\n  };\n\n  //shuffle the movies cards in the browser when clicked\n  shuffleScoreCard = id => {\n    let clickedMoviesIds = this.state.clickedMoviesIds;\n\n    if(clickedMoviesIds.includes(id)){\n      this.setState({ clickedMoviesIds: [], score: 0, status:  \"Game Over! You lost. Click to play again!\" });\n      return;\n    }else{\n      clickedMoviesIds.push(id)\n\n      if(clickedMoviesIds.length === 8){\n        this.setState({score: 8, status: \"You Won! Great Job, Smartie! Click to play again!\", clickedMoviesIds: []});\n        console.log('You Win');\n        return;\n      }\n\n      this.setState({ movies, clickedMoviesIds, score: clickedMoviesIds.length, status: \" \" });\n\n      for (let i = movies.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [movies[i], movies[j]] = [movies[j], movies[i]];\n      }\n    }\n  }\n\n  handleClick= id => {\n\n  }\n\n  // Map over this.state.cards and render a Card component for each card object\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Clicky-Game</h1>\n          <p className=\"App-intro\">\n            Try not to click the same movie twice!\n          </p>\n          <Widget/>\n        </header>\n        <Score total={this.state.score}\n               goal={8}\n               status={this.state.status}\n               />\n\n        <Wrapper>\n      <Title>Movies List</Title>\n      {this.state.movies.map(movie => (\n        <MovieCard\n          handler={this.shuffleScoreCard}\n          id={movie.id}\n          key={movie.id}\n          name={movie.name}\n          image={movie.image}\n          quote={movie.quote}\n          year={movie.year}\n        />\n      ))}\n    </Wrapper>\n        <footer>\n          <p><a href=\"\" target=\"_blank\" rel=\"noopener noreferrer\"> here</a>.</p>\n        </footer>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}