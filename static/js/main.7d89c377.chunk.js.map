{"version":3,"sources":["components/MovieCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Score/Score.js","App.js","index.js"],"names":["MovieCard","props","className","alt","name","src","image","quote","year","onClick","removeMovie","id","Wrapper","children","Title","Score","total","status","App","state","movies","clickedMoviesIds","score","goal","shuffleScoreCard","includes","setState","push","length","console","log","i","j","Math","floor","random","this","map","movie","key","href","target","rel","Component","ReactDOM","render","document","getElementById"],"mappings":"m3EA6BeA,MA1Bf,SAAmBC,GACjB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,SAEnC,yBAAKJ,UAAU,WACb,4BACE,4BACE,yCADF,IAC0BD,EAAMG,MAEhC,4BACE,0CADF,IAC2BH,EAAMM,OAEjC,4BACE,yCADF,IAC0BN,EAAMO,QAIpC,0BAAMC,QAAS,kBAAMR,EAAMS,YAAYT,EAAMU,KAAKT,UAAU,UAA5D,kB,MCfSU,MAJf,SAAiBX,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMY,W,MCG1BC,MAJf,SAAeb,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMY,W,OCOvBE,G,MAPD,SAAAd,GAAK,OACjB,yBAAKC,UAAU,aACb,wBAAIA,UAAU,SAAd,cAAkCD,EAAMe,OACxC,wBAAId,UAAU,UAAUD,EAAMgB,WCwEnBC,E,2MAtEbC,MAAQ,CACNC,SACAC,iBAAkB,GAClBC,MAAO,EACPC,KAAM,EACNN,OAAQ,I,EAIVO,iBAAmB,SAAAb,GACjB,IAAIU,EAAmB,EAAKF,MAAME,iBAElC,GAAGA,EAAiBI,SAASd,GAC3B,EAAKe,SAAS,CAAEL,iBAAkB,GAAIC,MAAO,EAAGL,OAAS,kDAD3D,CAME,GAFAI,EAAiBM,KAAKhB,GAES,IAA5BU,EAAiBO,OAGlB,OAFA,EAAKF,SAAS,CAACJ,MAAO,EAAGL,OAAQ,oDAAqDI,iBAAkB,UACxGQ,QAAQC,IAAI,WAId,EAAKJ,SAAS,CAAEN,SAAQC,mBAAkBC,MAAOD,EAAiBO,OAAQX,OAAQ,MAElF,IAAK,IAAIc,EAAIX,EAAOQ,OAAS,EAAGG,EAAI,EAAGA,IAAK,CAC1C,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADE,EAEjB,CAACX,EAAOY,GAAIZ,EAAOW,IAA3CX,EAAOW,GAFkC,KAE9BX,EAAOY,GAFuB,Q,wEAQtC,IAAD,OACP,OACE,yBAAK9B,UAAU,OACb,4BAAQA,UAAU,cAChB,wBAAIA,UAAU,aAAd,eACA,uBAAGA,UAAU,aAAb,2CAIF,kBAAC,EAAD,CAAOc,MAAOoB,KAAKjB,MAAMG,MAClBC,KAAM,EACNN,OAAQmB,KAAKjB,MAAMF,SAG1B,kBAAC,EAAD,KACF,kBAAC,EAAD,oBACCmB,KAAKjB,MAAMC,OAAOiB,KAAI,SAAAC,GAAK,OAC1B,kBAAC,EAAD,CACE5B,YAAa,EAAKA,YAClBC,GAAI2B,EAAM3B,GACV4B,IAAKD,EAAM3B,GACXP,KAAMkC,EAAMlC,KACZE,MAAOgC,EAAMhC,MACbC,MAAO+B,EAAM/B,MACbC,KAAM8B,EAAM9B,WAId,gCACE,2BAAG,uBAAGgC,KAAK,GAAGC,OAAO,SAASC,IAAI,uBAA/B,SAAH,W,GAjEQC,a,MCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7d89c377.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction MovieCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Quote:</strong> {props.quote}\n          </li>\n          <li>\n            <strong>Year:</strong> {props.year}\n          </li>\n        </ul>\n      </div>\n      <span onClick={() => props.removeMovie(props.id)} className=\"remove\">\n        ùòÖ\n      </span>\n    </div>\n  );\n}\n\nexport default MovieCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./Score.css\";\n\n//stateless component\nconst Score = props => (\n  <div className=\"gameScore\">\n    <h3 className=\"score\">Your Score {props.total}</h3>\n    <h3 className=\"status\">{props.status}</h3>\n  </div>\n);\n\nexport default Score;","import React, { Component } from \"react\";\nimport MovieCard from \"./components/MovieCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport movies from \"./movies.json\";\nimport Score from \"./components/Score\";\n\nclass App extends Component {\n  // Setting this.state.movies to the cards json array\n  state = {\n    movies,\n    clickedMoviesIds: [],\n    score: 0,\n    goal: 8,\n    status: \"\"\n  };\n\n  //shuffle the movies cards in the browser when clicked\n  shuffleScoreCard = id => {\n    let clickedMoviesIds = this.state.clickedMoviesIds;\n\n    if(clickedMoviesIds.includes(id)){\n      this.setState({ clickedMoviesIds: [], score: 0, status:  \"Game Over! You lost. Click to play again!\" });\n      return;\n    }else{\n      clickedMoviesIds.push(id)\n\n      if(clickedMoviesIds.length === 8){\n        this.setState({score: 8, status: \"You Won! Great Job, Smartie! Click to play again!\", clickedMoviesIds: []});\n        console.log('You Win');\n        return;\n      }\n\n      this.setState({ movies, clickedMoviesIds, score: clickedMoviesIds.length, status: \" \" });\n\n      for (let i = movies.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [movies[i], movies[j]] = [movies[j], movies[i]];\n      }\n    }\n  }\n\n  // Map over this.state.cards and render a Card component for each card object\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Clicky-Game</h1>\n          <p className=\"App-intro\">\n            Try not to click the same movie twice!\n          </p>\n        </header>\n        <Score total={this.state.score}\n               goal={8}\n               status={this.state.status}\n               />\n\n        <Wrapper>\n      <Title>Movies List</Title>\n      {this.state.movies.map(movie => (\n        <MovieCard\n          removeMovie={this.removeMovie}\n          id={movie.id}\n          key={movie.id}\n          name={movie.name}\n          image={movie.image}\n          quote={movie.quote}\n          year={movie.year}\n        />\n      ))}\n    </Wrapper>\n        <footer>\n          <p><a href=\"\" target=\"_blank\" rel=\"noopener noreferrer\"> here</a>.</p>\n        </footer>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}